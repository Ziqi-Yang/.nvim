" Notice: coc-go is uninstalled ,because it conflicts with vim-go completion(too many optitions)(though it does better than vim-go), also owing to closing vim-go completion is in no use,

let g:indent_guides_guide_size   = 1  " 指定对齐线的尺寸
let g:indent_guides_start_level  = 2  " 从第二层开始可视化显示缩进

let g:onedark_hide_endofbuffer = 1
let g:onedark_terminal_italics = 1
let g:gruvbox_italic=1
let g:gruvbox_transparent_bg=1

let g:lastplace_ignore = "gitcommit,gitrebase,svn,hgcommit"


let g:tagbar_width=30

"Uncomment to override defaults:
"let g:instant_markdown_slow = 1
"let g:instant_markdown_autostart = 0
"let g:instant_markdown_open_to_the_world = 1
"let g:instant_markdown_allow_unsafe_content = 1
"let g:instant_markdown_allow_external_content = 0
"let g:instant_markdown_mathjax = 1
"let g:instant_markdown_mermaid = 1
"let g:instant_markdown_logfile = '/tmp/instant_markdown.log'
let g:instant_markdown_autoscroll = 1
"let g:instant_markdown_port = 8888
"let g:instant_markdown_python = 1


let g:airline#extensions#tabline#enabled = 1
let g:airline#extensions#tabline#left_alt_sep = '|'
let g:airline#extensions#tabline#buffer_nr_show = 0
let g:airline#extensions#tabline#formatter = 'default'
let g:airline_theme = 'deus'
let g:airline#extensions#keymap#enabled = 1
let g:airline#extensions#tabline#buffer_idx_mode = 1
let g:airline#extensions#tabline#buffer_idx_format = {
       \ '0': '0 ',
       \ '1': '1 ',
       \ '2': '2 ',
       \ '3': '3 ',
       \ '4': '4 ',
       \ '5': '5 ',
       \ '6': '6 ',
       \ '7': '7 ',
       \ '8': '8 ',
       \ '9': '9 '
       \}

let g:rainbow_active = 1
let g:rainbow_conf = {
\   'guifgs': ['darkorange3', 'seagreen3', 'royalblue3', 'firebrick'],
\   'ctermfgs': ['lightyellow', 'lightcyan','lightblue', 'lightmagenta'],
\   'operators': '_,_',
\   'parentheses': ['start=/(/ end=/)/ fold', 'start=/\[/ end=/\]/ fold', 'start=/{/ end=/}/ fold'],
\   'separately': {
\       '*': {},
\       'tex': {
\           'parentheses': ['start=/(/ end=/)/', 'start=/\[/ end=/\]/'],
\       },
\       'lisp': {
\           'guifgs': ['darkorange3', 'seagreen3', 'royalblue3', 'firebrick'],
\       },
\       'vim': {
\           'parentheses': ['start=/(/ end=/)/', 'start=/\[/ end=/\]/', 'start=/{/ end=/}/ fold', 'start=/(/ end=/)/ containedin=vimFuncBody', 'start=/\[/ end=/\]/ containedin=vimFuncBody', 'start=/{/ end=/}/ fold containedin=vimFuncBody'],
\       },
\       'html': {
\           'parentheses': ['start=/\v\<((area|base|br|col|embed|hr|img|input|keygen|link|menuitem|meta|param|source|track|wbr)[ >])@!\z([-_:a-zA-Z0-9]+)(\s+[-_:a-zA-Z0-9]+(\=("[^"]*"|'."'".'[^'."'".']*'."'".'|[^ '."'".'"><=`]*))?)*\>/ end=#</\z1># fold'],
\       },
\       'css': 0,
\   }
\}


" nerdcommenter
"add spaces after comment delimiters by default
let g:NERDSpaceDelims = 1
" python 自动的会多加一个空格
au FileType python let g:NERDSpaceDelims = 0
" Use compact syntax for prettified multi-line comments
let g:NERDCompactSexyComs = 1
" Align line-wise comment delimiters flush left instead of following code indentation
let g:NERDDefaultAlign = 'left'
" Set a language to use its alternate delimiters by default
let g:NERDAltDelims_java = 1
" Add your own custom formats or override the defaults
" let g:NERDCustomDelimiters = { 'c': { 'left': '/**','right': '*/' } }
" Allow commenting and inverting empty lines (useful when commenting a region)
let g:NERDCommentEmptyLines = 1
" Enable trimming of trailing whitespace when uncommenting
let g:NERDTrimTrailingWhitespace = 1 
" Enable NERDCommenterToggle to check all selected lines is commented or not
let g:NERDToggleCheckAllLines = 1



" autocmd vimenter * NERDTree  "自动开启Nerdtree
let g:NERDTreeWinSize = 25 "设定 NERDTree 视窗大小
let NERDTreeShowBookmarks=1  " 开启Nerdtree时自动显示Bookmarks
"打开vim时如果没有文件自动打开NERDTree
" autocmd vimenter * if !argc()|NERDTree|endif
"当NERDTree为剩下的唯一窗口时自动关闭
autocmd bufenter * if (winnr("$") == 1 && exists("b:NERDTree") && b:NERDTree.isTabTree()) | q | endif
" 设置树的显示图标
let g:NERDTreeDirArrowExpandable = '▸'
let g:NERDTreeDirArrowCollapsible = '▾'
let NERDTreeIgnore = ['\.pyc$']  " 过滤所有.pyc文件不显示
let g:NERDTreeShowLineNumbers=0 " 是否显示行号
let g:NERDTreeHidden=0     "不显示隐藏文件
""Making it prettier
let NERDTreeMinimalUI = 1
let NERDTreeDirArrows = 1

" vim-go
" note that moditify ~/.local/share/nvim/plugged/vim-go/templates/hello_world.go
" could change the new buffer insertation
let g:go_fmt_command = 'goimports'
let g:go_autodetect_gopath = 1
" let g:go_bin_path = '$GOBIN'
let g:go_highlight_types = 1
let g:go_highlight_fields = 1
let g:go_highlight_functions = 1
let g:go_highlight_function_calls = 1
let g:go_highlight_extra_types = 1
let g:go_highlight_generate_tags = 1

" Open :GoDeclsDir with ctrl-g
nmap <C-g> :GoDeclsDir<cr>
imap <C-g> <esc>:<C-u>GoDeclsDir<cr>



" vim-which-key


let g:mapleader = "\<Space>"
let g:maplocalleader = ","
nnoremap <silent> <leader> :WhichKey '<Space>'<CR>
nnoremap <silent> <localleader> :WhichKey ','<CR>
let g:which_key_map =  {}
let g:which_key_map.f = {
            \ 'name': "+file",
            \ 'm': 'open $MYVIMRC',
            \ 'h': ['History','open history'],
            \ 'c': ['Filetypes','change-file-type']
            \ }
let g:which_key_map.c = {
            \ 'name': '+comment'
            \}
let g:which_key_map.w = {
            \ 'name': '+tags',
            \ 'q': 'quit-cur-tab'
            \}
let g:which_key_map.y = {
            \ 'name': '+yank',
            \ 'y': '(visual)clipboard',
            \ 'w': 'whole buffer(clip)',
            \ 'b': 'whole buffer',
            \ 'l': 'line'
            \}
let g:which_key_map.p = {
            \ 'name': '+paste',
            \ 'p': 'paste clipboard'
            \}
let g:which_key_map.s = {
            \ 'name': '+search',
            \ 's': ['BLines', 'lines in current buf(fzf)'],
            \ 'l': ['Lines','Lines in loaded buffers'],
            \ 'm': ['Marks','search-marks'],
            \ 'a': ['Ag','ag(ALT-A/D:select/del all)'],
            \ 'r': ['Rg','rg(ALT-A/D:select/del all)'],
            \ 'f': ['Files', 'fzf-search-files(name)']
            \}
let g:which_key_map.t = {
            \ 'name': '+themes',
            \ 't': ['Colors', 'change theme']
            \} 
let g:which_key_map.g = {
            \ 'name': '+goto(reference...)',
            \ 'g': 'definition',
            \ 'd': 'GoDoc' 
            \} 
let g:which_key_map.d = {
            \ 'name': '+delete',
            \ 'd':"whole content"
            \} 
let g:which_key_map.t = {
            \ 'name': '+translate',
            \ 't': ['Translate', 'bottom line'],
            \ 'w': ['TranslateW','windows'],
            \ 'c': ['TranslateX','clipboard']
            \}
" Notice if i open a go(or other),then open a vimscript(or other except go),the runner
" changed
let g:which_key_map.r = {
            \ 'name': '+run(...)',
            \ 'r': 'run',
            \ 'b': 'build', 
            \ 't': 'MY_test',
            \ 'm': '(go)run in terminal'
            \}
